{
  "contractName": "DoctorFactory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "doctor_",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "name_",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "affiliate_",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "fromApp",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "internalType": "struct FromAppOption",
          "name": "option_",
          "type": "tuple"
        }
      ],
      "name": "createDoctor",
      "outputs": [
        {
          "internalType": "address",
          "name": "clone",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctor_\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"name_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"affiliate_\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"fromApp\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"internalType\":\"struct FromAppOption\",\"name\":\"option_\",\"type\":\"tuple\"}],\"name\":\"createDoctor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"clone\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DoctorFactory.sol\":\"DoctorFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xae614c6b103b743c62e9544632f7ef4fc8950de4e9c783d2e765a3b86701dda3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1840012075b9b05caa02da1b16d2d2662b2c383feb3169c8159fd8deb4840f5c\",\"dweb:/ipfs/QmPj63a7JH3aAqVj1wvkuGEdth7s9f33vK26A5aE9k23S4\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/Doctor.sol\":{\"keccak256\":\"0x54c08a42ede843c35f32186688bc2d8e3943e64da100e713a84da34d9bb59608\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35e9188962660912ffad4283f928492b366b55d666641cd1f5c24680f2dd45cb\",\"dweb:/ipfs/QmQjaexudbshsA6XFUeHnx5V6k2JVDmfbcLkgmoERoGJ8a\"]},\"project:/contracts/DoctorFactory.sol\":{\"keccak256\":\"0x756881eb09c3e2d98e8d612857290db43c06d03870b7e5d0a95aae9dbd95749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f44950ca912f70171cd626858a65a8a85ffbf642920f9480670b52ead6889208\",\"dweb:/ipfs/QmfAyCYwZsboypxWKbiTtFPBXLYaors7qehvcAyXd1nMEo\"]},\"project:/contracts/Helper.sol\":{\"keccak256\":\"0x4544d2a65b4a8e43484353efc6ba9e1dcdfe18ffb424517cf55cda15064621c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0853c1cd33caac85489c48ff5d76eb70f52b2e46846fb04e24c2cba8fcd42ade\",\"dweb:/ipfs/QmSdZsMUxXNxZaMNTpVREoLeoMqu7ChdzuZNg1xcsnBbGS\"]},\"project:/contracts/Treatment.sol\":{\"keccak256\":\"0x4eff2ee4e527ed2f59f89400ec3760f7f2ae13ea3e791df10b0a04256aac7708\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f07dd2b7319095efb64fa22fe32bee4231ee21c0c8110b6c9d1cc776a741e8d1\",\"dweb:/ipfs/QmSfw171vUCmaRmEo8BfLVboBgiyXQk4nS8gMYzPDsdXXK\"]},\"project:/contracts/TreatmentFactory.sol\":{\"keccak256\":\"0x6c03e82845e8c74b4aa8e308cb0a76a0e4cd54407eae9e0366f46bc74ece66aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef3ebcdc49176ba7f7303b1da93b010adc68b762622c65ad2df55adc5849a854\",\"dweb:/ipfs/QmRbZ38Ax4oZCXtydLrAuGSfo84ETbYUf3ba5ZGCNYGp9u\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5061001a33610058565b604051610026906100a8565b604051809103906000f080158015610042573d6000803e3d6000fd5b5060601b6001600160601b0319166080526100b5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6117448061071683390190565b60805160601c6106446100d2600039600060e701526106446000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063f13e48691461009e578063f2fde38b146100b1575b600080fd5b6100596100c4565b005b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100756100ac366004610534565b6100d8565b6100596100bf366004610513565b61025b565b6100cc610317565b6100d66000610398565b565b60006100e2610317565b61010b7f000000000000000000000000000000000000000000000000000000000000000061040d565b8251909150156101bd5760208201516040517f303d38b100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8781166004830152918216602482015233604482015260648101869052608481018590529082169063303d38b19060a401600060405180830381600087803b1580156101a057600080fd5b505af11580156101b4573d6000803e3d6000fd5b50505050610253565b6040517f76cfcff600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015233602483015260448201869052606482018590528216906376cfcff690608401600060405180830381600087803b15801561023a57600080fd5b505af115801561024e573d6000803e3d6000fd5b505050505b949350505050565b610263610317565b73ffffffffffffffffffffffffffffffffffffffff811661030b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61031481610398565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146100d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610302565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f091505073ffffffffffffffffffffffffffffffffffffffff81166104ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f455243313136373a20637265617465206661696c6564000000000000000000006044820152606401610302565b919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146104ea57600080fd5b600060208284031215610524578081fd5b61052d826104ef565b9392505050565b60008060008084860360a081121561054a578384fd5b610553866104ef565b9450602086013593506040860135925060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa082011215610592578182fd5b506040516040810181811067ffffffffffffffff821117156105db577f4e487b710000000000000000000000000000000000000000000000000000000083526041600452602483fd5b604052606086013580151581146105f0578283fd5b81526105fe608087016104ef565b602082015293969295509093505056fea26469706673582212207a68757846057fab7d32cf23f44f6da1efffc198019bb3e801356140c31b8e5464736f6c63430008040033608060405234801561001057600080fd5b5061003c7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b086000610041565b61008c565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6116a98061009b6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806376cfcff611610097578063d294ffe011610066578063d294ffe014610225578063d547741f14610238578063ec87621c1461024b578063fec331f21461027257600080fd5b806376cfcff6146101b15780638bb25419146101c457806391d14854146101d9578063a217fddf1461021d57600080fd5b8063303d38b1116100d3578063303d38b11461016857806336568abe1461017b5780635a9b0b891461018e578063602792b0146101a957600080fd5b806301ffc9a7146100fa578063248a9ca3146101225780632f2ff15d14610153575b600080fd5b61010d610108366004611256565b610299565b60405190151581526020015b60405180910390f35b61014561013036600461120f565b60009081526020819052604090206001015490565b604051908152602001610119565b610166610161366004611227565b610332565b005b610166610176366004611150565b61035c565b610166610189366004611227565b610484565b60015460025460408051928352602083019190915201610119565b610166610537565b6101666101bf3660046111aa565b61060a565b6101cc610702565b6040516101199190611428565b61010d6101e7366004611227565b60009182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b610145600081565b610166610233366004611118565b610ad9565b610166610246366004611227565b610b58565b6101457f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0881565b6101457f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f81565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061032c57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60008281526020819052604090206001015461034d81610b7d565b6103578383610b8a565b505050565b60045460ff16156103ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f416c726561647920696e697469616c697a65640000000000000000000000000060448201526064015b60405180910390fd5b6103f87f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f86610c7a565b6104227f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0884610c7a565b61044c7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0885610c7a565b6001918255600255600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055505050565b73ffffffffffffffffffffffffffffffffffffffff81163314610529576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084016103c5565b6105338282610c84565b5050565b3360009081527fe84508f2c7fa9c351146748b3025cb78b45df37d868e48c6a75102fecdeee645602052604090205460ff16806105a257503360009081527fdf1cb6f79b8687a60e91aced08290a53cb47a179b80c0c7c836d1c923c9a5647602052604090205460ff165b610608576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6565642077726974652061636365737300000000000000000000000000000060448201526064016103c5565b565b60045460ff1615610677576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f416c726561647920696e697469616c697a65640000000000000000000000000060448201526064016103c5565b6106a17f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f85610c7a565b6106cb7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0884610c7a565b6001918255600255600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790555050565b60035460609067ffffffffffffffff811115610747577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156107b857816020015b604080516080810182526000808252602080830182905260609383018490529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816107655790505b50905060005b600354811015610ad557600060038281548110610804577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050604051806080016040528060038481548110610876577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff16637b0f9a366040518163ffffffff1660e01b815260040160206040518083038186803b15801561090257600080fd5b505afa158015610916573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093a9190611134565b73ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1663f595c4856040518163ffffffff1660e01b815260040160006040518083038186803b15801561099b57600080fd5b505afa1580156109af573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109f59190810190611296565b81526020018273ffffffffffffffffffffffffffffffffffffffff1663b2fa1c9e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a4057600080fd5b505afa158015610a54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7891906111ef565b1515815250838381518110610ab6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250508080610acd906115ba565b9150506107be565b5090565b610ae1610537565b600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600082815260208190526040902060010154610b7381610b7d565b6103578383610c84565b610b878133610d3b565b50565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166105335760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055610c1c3390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6105338282610b8a565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16156105335760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1661053357610d918173ffffffffffffffffffffffffffffffffffffffff166014610e0b565b610d9c836020610e0b565b604051602001610dad9291906113a7565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526103c5916004016114ed565b60606000610e1a836002611518565b610e25906002611500565b67ffffffffffffffff811115610e64577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e8e576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610eec577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610f76577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000610fb2846002611518565b610fbd906001611500565b90505b60018111156110a8577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110611025577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b828281518110611062577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936110a181611585565b9050610fc0565b508315611111576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103c5565b9392505050565b600060208284031215611129578081fd5b813561111181611651565b600060208284031215611145578081fd5b815161111181611651565b600080600080600060a08688031215611167578081fd5b853561117281611651565b9450602086013561118281611651565b9350604086013561119281611651565b94979396509394606081013594506080013592915050565b600080600080608085870312156111bf578384fd5b84356111ca81611651565b935060208501356111da81611651565b93969395505050506040820135916060013590565b600060208284031215611200578081fd5b81518015158114611111578182fd5b600060208284031215611220578081fd5b5035919050565b60008060408385031215611239578182fd5b82359150602083013561124b81611651565b809150509250929050565b600060208284031215611267578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611111578182fd5b6000602082840312156112a7578081fd5b815167ffffffffffffffff808211156112be578283fd5b818401915084601f8301126112d1578283fd5b8151818111156112e3576112e3611622565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561132957611329611622565b81604052828152876020848701011115611341578586fd5b611352836020830160208801611555565b979650505050505050565b60008151808452611375816020860160208601611555565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516113df816017850160208801611555565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161141c816028840160208801611555565b01602801949350505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b838110156114df577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08984030185528151608073ffffffffffffffffffffffffffffffffffffffff808351168652808a840151168a870152508782015181898701526114bc8287018261135d565b60609384015115159690930195909552509487019492509086019060010161144e565b509098975050505050505050565b602081526000611111602083018461135d565b60008219821115611513576115136115f3565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611550576115506115f3565b500290565b60005b83811015611570578181015183820152602001611558565b8381111561157f576000848401525b50505050565b600081611594576115946115f3565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115ec576115ec6115f3565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610b8757600080fdfea264697066735822122094fa65ad42a3e5f0a6ebaf4e8741d18fbf3a502e5a44d698d6b63c8bcf7fbcff64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063f13e48691461009e578063f2fde38b146100b1575b600080fd5b6100596100c4565b005b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100756100ac366004610534565b6100d8565b6100596100bf366004610513565b61025b565b6100cc610317565b6100d66000610398565b565b60006100e2610317565b61010b7f000000000000000000000000000000000000000000000000000000000000000061040d565b8251909150156101bd5760208201516040517f303d38b100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8781166004830152918216602482015233604482015260648101869052608481018590529082169063303d38b19060a401600060405180830381600087803b1580156101a057600080fd5b505af11580156101b4573d6000803e3d6000fd5b50505050610253565b6040517f76cfcff600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015233602483015260448201869052606482018590528216906376cfcff690608401600060405180830381600087803b15801561023a57600080fd5b505af115801561024e573d6000803e3d6000fd5b505050505b949350505050565b610263610317565b73ffffffffffffffffffffffffffffffffffffffff811661030b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61031481610398565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146100d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610302565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f091505073ffffffffffffffffffffffffffffffffffffffff81166104ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f455243313136373a20637265617465206661696c6564000000000000000000006044820152606401610302565b919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146104ea57600080fd5b600060208284031215610524578081fd5b61052d826104ef565b9392505050565b60008060008084860360a081121561054a578384fd5b610553866104ef565b9450602086013593506040860135925060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa082011215610592578182fd5b506040516040810181811067ffffffffffffffff821117156105db577f4e487b710000000000000000000000000000000000000000000000000000000083526041600452602483fd5b604052606086013580151581146105f0578283fd5b81526105fe608087016104ef565b602082015293969295509093505056fea26469706673582212207a68757846057fab7d32cf23f44f6da1efffc198019bb3e801356140c31b8e5464736f6c63430008040033",
  "immutableReferences": {
    "1340": [
      {
        "length": 32,
        "start": 231
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3951:17",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:17",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:17",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:17"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:17"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:17",
                "type": ""
              }
            ],
            "src": "14:196:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "285:126:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "331:26:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "340:6:17"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "348:6:17"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "333:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "333:22:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "333:22:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "306:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "315:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "302:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "302:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "327:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "298:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "298:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "295:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "366:39:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "395:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "376:18:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:29:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "366:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "251:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "262:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "274:6:17",
                "type": ""
              }
            ],
            "src": "215:196:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "568:1000:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "578:33:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "592:7:17"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "601:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "588:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "588:23:17"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "582:2:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "636:26:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "645:6:17"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "653:6:17"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "638:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "638:22:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "638:22:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "627:2:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "631:3:17",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "623:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "623:12:17"
                  },
                  "nodeType": "YulIf",
                  "src": "620:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "671:39:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "700:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "681:18:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "681:29:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "671:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "719:42:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "746:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "757:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "742:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "742:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "729:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "729:32:17"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "719:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "770:42:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "797:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "808:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "793:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "793:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "780:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "780:32:17"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "770:6:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "909:26:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "918:6:17"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "926:6:17"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "911:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "911:22:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "911:22:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "832:2:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "836:66:17",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "828:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "828:75:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "905:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "824:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "824:84:17"
                  },
                  "nodeType": "YulIf",
                  "src": "821:2:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "944:23:17",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "958:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "958:9:17"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "948:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "976:33:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "998:6:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1006:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "994:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "994:15:17"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "980:10:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1092:178:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1113:6:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1121:77:17",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1106:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1106:93:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1106:93:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1219:1:17",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1222:4:17",
                              "type": "",
                              "value": "0x41"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1212:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1212:15:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1212:15:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1247:6:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1255:4:17",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1240:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1240:20:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1240:20:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1027:10:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1039:18:17",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1024:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1024:34:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1063:10:17"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1075:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1060:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1060:22:17"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1021:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:62:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1018:2:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1286:2:17",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1290:10:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1279:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1279:22:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1279:22:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1310:45:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1340:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1351:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1336:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1336:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1323:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1323:32:17"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1314:5:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1408:26:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1417:6:17"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1425:6:17"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1410:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1410:22:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1410:22:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1377:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1398:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1391:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1391:13:17"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1384:6:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1384:21:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1374:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1374:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1367:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1367:40:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1364:2:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1450:6:17"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1458:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1443:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1443:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1443:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1484:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1492:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1480:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1480:15:17"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1520:9:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1531:3:17",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1516:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1516:19:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "1497:18:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1497:39:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1473:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1473:64:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1473:64:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1546:16:17",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1556:6:17"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1546:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes32t_bytes32t_struct$_FromAppOption_$1427_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "510:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "521:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "533:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "541:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "549:6:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "557:6:17",
                "type": ""
              }
            ],
            "src": "416:1152:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1674:125:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1684:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1696:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1707:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1692:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1692:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1684:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1726:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1741:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1749:42:17",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1737:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1737:55:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1719:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1719:74:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1719:74:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1643:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1654:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1665:4:17",
                "type": ""
              }
            ],
            "src": "1573:226:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2017:338:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2027:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2039:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2050:3:17",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2035:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2035:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2027:4:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2063:52:17",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2073:42:17",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2067:2:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2131:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2146:6:17"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2154:2:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2142:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2142:15:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2124:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2124:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2124:34:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2178:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2189:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2174:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2174:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2198:6:17"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2206:2:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2194:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2194:15:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2167:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2167:43:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2167:43:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2230:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2241:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2226:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2226:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "2250:6:17"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2258:2:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2246:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2246:15:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2219:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2219:43:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2219:43:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2282:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2293:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2278:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2278:18:17"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2298:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2271:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2271:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2271:34:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2325:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2336:3:17",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2321:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2321:19:17"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "2342:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2314:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2314:35:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2314:35:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_bytes32_t_bytes32__to_t_address_t_address_t_address_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1954:9:17",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1965:6:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1973:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1981:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1989:6:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1997:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2008:4:17",
                "type": ""
              }
            ],
            "src": "1804:551:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2545:285:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2555:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2567:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2578:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2563:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2563:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2555:4:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2591:52:17",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2601:42:17",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2595:2:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2659:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2674:6:17"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2682:2:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2670:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2670:15:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2652:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2652:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2652:34:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2706:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2717:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2702:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2702:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2726:6:17"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2734:2:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2722:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2722:15:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2695:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2695:43:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2695:43:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2758:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2769:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2754:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2754:18:17"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2774:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2747:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2747:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2747:34:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2801:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2812:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2797:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2797:18:17"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2817:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2790:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2790:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2790:34:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes32__to_t_address_t_address_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2490:9:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2501:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2509:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2517:6:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2525:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2536:4:17",
                "type": ""
              }
            ],
            "src": "2360:470:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3009:228:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3026:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3037:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3019:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3019:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3019:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3060:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3071:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3056:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3056:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3076:2:17",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3049:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3049:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3049:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3099:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3110:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3095:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3095:18:17"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3115:34:17",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3088:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3088:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3088:62:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3170:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3181:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3166:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3166:18:17"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3186:8:17",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3159:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3159:36:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3159:36:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3204:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3216:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3227:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3212:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3212:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3204:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2986:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3000:4:17",
                "type": ""
              }
            ],
            "src": "2835:402:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3416:172:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3433:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3444:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3426:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3426:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3426:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3467:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3478:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3463:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3463:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3483:2:17",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3456:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3456:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3456:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3506:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3517:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3502:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3502:18:17"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3522:24:17",
                        "type": "",
                        "value": "ERC1167: create failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3495:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3495:52:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3495:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3556:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3568:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3579:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3564:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3564:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3556:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3393:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3407:4:17",
                "type": ""
              }
            ],
            "src": "3242:346:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3767:182:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3784:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3795:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3777:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3777:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3777:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3818:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3829:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3814:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3814:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3834:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3807:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3807:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3807:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3857:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3868:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3853:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3853:18:17"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3873:34:17",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3846:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3846:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3846:62:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3917:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3929:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3940:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3925:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3925:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3917:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3744:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3758:4:17",
                "type": ""
              }
            ],
            "src": "3593:356:17"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_bytes32t_struct$_FromAppOption_$1427_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        let _1 := sub(dataEnd, headStart)\n        if slt(_1, 160) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        if slt(add(_1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0), 64) { revert(value3, value3) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 64)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(value3, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x41)\n            revert(value3, 0x24)\n        }\n        mstore(64, newFreePtr)\n        let value := calldataload(add(headStart, 96))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value3, value3) }\n        mstore(memPtr, value)\n        mstore(add(memPtr, 32), abi_decode_address(add(headStart, 128)))\n        value3 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_bytes32_t_bytes32__to_t_address_t_address_t_address_t_bytes32_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_address_t_address_t_bytes32_t_bytes32__to_t_address_t_address_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"ERC1167: create failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "208:741:10:-:0;;;293:75;;;;;;;;;-1:-1:-1;936:32:2;719:10:4;936:18:2;:32::i;:::-;348:12:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;317:44:10;;-1:-1:-1;317:44:10;;;208:741;;2433:187:2;2506:16;2525:6;;-1:-1:-1;2541:17:2;;-1:-1:-1;2541:17:2;;;;;;;;2573:40;;2525:6;;;2541:17;;2525:6;;2573:40;;;2433:187;;:::o;208:741:10:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;",
  "deployedSourceMap": "208:741:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:2;;;:::i;:::-;;1201:85;1247:7;1273:6;;;1201:85;;;1749:42:17;1737:55;;;1719:74;;1707:2;1692:18;1201:85:2;;;;;;;374:573:10;;;;;;:::i;:::-;;:::i;2081:198:2:-;;;;;;:::i;:::-;;:::i;1831:101::-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;374:573:10:-;544:13;1094::2;:11;:13::i;:::-;577:34:10::1;590:20;577:12;:34::i;:::-;625:15:::0;;569:42;;-1:-1:-1;621:320:10::1;;;730:12;::::0;::::1;::::0;656:179:::1;::::0;;;;:31:::1;2142:15:17::0;;;656:179:10::1;::::0;::::1;2124:34:17::0;2194:15;;;2174:18;;;2167:43;760:10:10::1;2226:18:17::0;;;2219:43;2278:18;;;2271:34;;;2321:19;;;2314:35;;;656:31:10;;::::1;::::0;::::1;::::0;2035:19:17;;656:179:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;621:320;;;866:64;::::0;;;;:24:::1;2670:15:17::0;;;866:64:10::1;::::0;::::1;2652:34:17::0;900:10:10::1;2702:18:17::0;;;2695:43;2754:18;;;2747:34;;;2797:18;;;2790:34;;;866:24:10;::::1;::::0;::::1;::::0;2563:19:17;;866:64:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;621:320;374:573:::0;;;;;;:::o;2081:198:2:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;3037:2:17;2161:73:2::1;::::0;::::1;3019:21:17::0;3076:2;3056:18;;;3049:30;3115:34;3095:18;;;3088:62;3186:8;3166:18;;;3159:36;3212:19;;2161:73:2::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;1422:23;1273:6;719:10:4;1422:23:2;1414:68;;;;;;;3795:2:17;1414:68:2;;;3777:21:17;;;3814:18;;;3807:30;3873:34;3853:18;;;3846:62;3925:18;;1414:68:2;3767:182:17;2433:187:2;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2433:187;;:::o;973:558:3:-;1030:16;1141:4;1135:11;1171:66;1166:3;1159:79;1284:14;1278:4;1274:25;1267:4;1262:3;1258:14;1251:49;1336:66;1329:4;1324:3;1320:14;1313:90;1443:4;1438:3;1435:1;1428:20;1416:32;-1:-1:-1;;1475:22:3;;;1467:57;;;;;;;3444:2:17;1467:57:3;;;3426:21:17;3483:2;3463:18;;;3456:30;3522:24;3502:18;;;3495:52;3564:18;;1467:57:3;3416:172:17;1467:57:3;973:558;;;:::o;14:196:17:-;82:20;;142:42;131:54;;121:65;;111:2;;200:1;197;190:12;215:196;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;348:6;340;333:22;295:2;376:29;395:9;376:29;:::i;:::-;366:39;285:126;-1:-1:-1;;;285:126:17:o;416:1152::-;533:6;541;549;557;601:9;592:7;588:23;631:3;627:2;623:12;620:2;;;653:6;645;638:22;620:2;681:29;700:9;681:29;:::i;:::-;671:39;;757:2;746:9;742:18;729:32;719:42;;808:2;797:9;793:18;780:32;770:42;;905:2;836:66;832:2;828:75;824:84;821:2;;;926:6;918;911:22;821:2;;964;958:9;1006:2;998:6;994:15;1075:6;1063:10;1060:22;1039:18;1027:10;1024:34;1021:62;1018:2;;;1121:77;1113:6;1106:93;1222:4;1219:1;1212:15;1255:4;1247:6;1240:20;1018:2;1286;1279:22;1351:2;1336:18;;1323:32;1391:13;;1384:21;1374:32;;1364:2;;1425:6;1417;1410:22;1364:2;1443:21;;1497:39;1531:3;1516:19;;1497:39;:::i;:::-;1492:2;1480:15;;1473:64;568:1000;;;;-1:-1:-1;568:1000:17;;-1:-1:-1;;568:1000:17:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./Doctor.sol\";\nimport \"./Helper.sol\";\n\ncontract DoctorFactory is Ownable {\n    address immutable doctorImplementation;\n\n    constructor() {\n        doctorImplementation = address(new Doctor());\n    }\n\n    function createDoctor(\n        address doctor_,\n        bytes32 name_,\n        bytes32 affiliate_,\n        FromAppOption memory option_\n    ) external onlyOwner returns (address clone) {\n        clone = Clones.clone(doctorImplementation);\n        if (option_.fromApp) {\n            Doctor(clone).initializeFromApp(\n                doctor_,\n                option_.addr,\n                msg.sender,\n                name_,\n                affiliate_\n            );\n        } else {\n            Doctor(clone).initialize(doctor_, msg.sender, name_, affiliate_);\n        }\n    }\n}\n",
  "sourcePath": "/home/leslie/Documents/GitHub/svelte-blockchain-template-sveltekit/contracts/DoctorFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/DoctorFactory.sol",
    "exportedSymbols": {
      "AccessControl": [
        319
      ],
      "BoolTriple": [
        1422
      ],
      "Bytes32Pair": [
        1415
      ],
      "Clones": [
        585
      ],
      "Context": [
        607
      ],
      "Doctor": [
        1330
      ],
      "DoctorFactory": [
        1408
      ],
      "DoctorStruct": [
        1095
      ],
      "DoctorTreatmentMeta": [
        1090
      ],
      "Dosage": [
        2666
      ],
      "ERC165": [
        857
      ],
      "Frequency": [
        2670
      ],
      "FromAppOption": [
        1427
      ],
      "IAccessControl": [
        392
      ],
      "IERC165": [
        869
      ],
      "Ownable": [
        505
      ],
      "Schedule": [
        2686
      ],
      "Strings": [
        833
      ],
      "Treatment": [
        2949
      ],
      "TreatmentFactory": [
        3014
      ]
    },
    "id": 1409,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1332,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:10"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "id": 1333,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1409,
        "sourceUnit": 586,
        "src": "57:50:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1334,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1409,
        "sourceUnit": 506,
        "src": "108:52:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Doctor.sol",
        "file": "./Doctor.sol",
        "id": 1335,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1409,
        "sourceUnit": 1331,
        "src": "161:22:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Helper.sol",
        "file": "./Helper.sol",
        "id": 1336,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1409,
        "sourceUnit": 1428,
        "src": "184:22:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1337,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 505,
              "src": "234:7:10"
            },
            "id": 1338,
            "nodeType": "InheritanceSpecifier",
            "src": "234:7:10"
          }
        ],
        "contractDependencies": [
          1330
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1408,
        "linearizedBaseContracts": [
          1408,
          505,
          607
        ],
        "name": "DoctorFactory",
        "nameLocation": "217:13:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1340,
            "mutability": "immutable",
            "name": "doctorImplementation",
            "nameLocation": "266:20:10",
            "nodeType": "VariableDeclaration",
            "scope": 1408,
            "src": "248:38:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1339,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "248:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1353,
              "nodeType": "Block",
              "src": "307:61:10",
              "statements": [
                {
                  "expression": {
                    "id": 1351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1343,
                      "name": "doctorImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1340,
                      "src": "317:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "348:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Doctor_$1330_$",
                              "typeString": "function () returns (contract Doctor)"
                            },
                            "typeName": {
                              "id": 1347,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1346,
                                "name": "Doctor",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1330,
                                "src": "352:6:10"
                              },
                              "referencedDeclaration": 1330,
                              "src": "352:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Doctor_$1330",
                                "typeString": "contract Doctor"
                              }
                            }
                          },
                          "id": 1349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "348:12:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Doctor_$1330",
                            "typeString": "contract Doctor"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Doctor_$1330",
                            "typeString": "contract Doctor"
                          }
                        ],
                        "id": 1345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "340:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1344,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "340:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "340:21:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "317:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1352,
                  "nodeType": "ExpressionStatement",
                  "src": "317:44:10"
                }
              ]
            },
            "id": 1354,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "304:2:10"
            },
            "returnParameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:0:10"
            },
            "scope": 1408,
            "src": "293:75:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1406,
              "nodeType": "Block",
              "src": "559:388:10",
              "statements": [
                {
                  "expression": {
                    "id": 1375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1370,
                      "name": "clone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1368,
                      "src": "569:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1373,
                          "name": "doctorImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1340,
                          "src": "590:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 1371,
                          "name": "Clones",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 585,
                          "src": "577:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Clones_$585_$",
                            "typeString": "type(library Clones)"
                          }
                        },
                        "id": 1372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "clone",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 528,
                        "src": "577:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                          "typeString": "function (address) returns (address)"
                        }
                      },
                      "id": 1374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "577:34:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "569:42:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1376,
                  "nodeType": "ExpressionStatement",
                  "src": "569:42:10"
                },
                {
                  "condition": {
                    "expression": {
                      "id": 1377,
                      "name": "option_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1363,
                      "src": "625:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FromAppOption_$1427_memory_ptr",
                        "typeString": "struct FromAppOption memory"
                      }
                    },
                    "id": 1378,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "fromApp",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1424,
                    "src": "625:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1404,
                    "nodeType": "Block",
                    "src": "852:89:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1397,
                              "name": "doctor_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1356,
                              "src": "891:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1398,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "900:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "900:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1400,
                              "name": "name_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1358,
                              "src": "912:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1401,
                              "name": "affiliate_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1360,
                              "src": "919:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1394,
                                  "name": "clone",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1368,
                                  "src": "873:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1393,
                                "name": "Doctor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1330,
                                "src": "866:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Doctor_$1330_$",
                                  "typeString": "type(contract Doctor)"
                                }
                              },
                              "id": 1395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "866:13:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Doctor_$1330",
                                "typeString": "contract Doctor"
                              }
                            },
                            "id": 1396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1192,
                            "src": "866:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,address,bytes32,bytes32) external"
                            }
                          },
                          "id": 1402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "866:64:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1403,
                        "nodeType": "ExpressionStatement",
                        "src": "866:64:10"
                      }
                    ]
                  },
                  "id": 1405,
                  "nodeType": "IfStatement",
                  "src": "621:320:10",
                  "trueBody": {
                    "id": 1392,
                    "nodeType": "Block",
                    "src": "642:204:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1383,
                              "name": "doctor_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1356,
                              "src": "705:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1384,
                                "name": "option_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1363,
                                "src": "730:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FromAppOption_$1427_memory_ptr",
                                  "typeString": "struct FromAppOption memory"
                                }
                              },
                              "id": 1385,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1426,
                              "src": "730:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1386,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "760:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "760:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1388,
                              "name": "name_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1358,
                              "src": "788:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1389,
                              "name": "affiliate_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1360,
                              "src": "811:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1380,
                                  "name": "clone",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1368,
                                  "src": "663:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1379,
                                "name": "Doctor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1330,
                                "src": "656:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Doctor_$1330_$",
                                  "typeString": "type(contract Doctor)"
                                }
                              },
                              "id": 1381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "656:13:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Doctor_$1330",
                                "typeString": "contract Doctor"
                              }
                            },
                            "id": 1382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initializeFromApp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1240,
                            "src": "656:31:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,address,address,bytes32,bytes32) external"
                            }
                          },
                          "id": 1390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "656:179:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1391,
                        "nodeType": "ExpressionStatement",
                        "src": "656:179:10"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f13e4869",
            "id": 1407,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1366,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1365,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 424,
                  "src": "525:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "525:9:10"
              }
            ],
            "name": "createDoctor",
            "nameLocation": "383:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1356,
                  "mutability": "mutable",
                  "name": "doctor_",
                  "nameLocation": "413:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1407,
                  "src": "405:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1358,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "438:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1407,
                  "src": "430:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1357,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1360,
                  "mutability": "mutable",
                  "name": "affiliate_",
                  "nameLocation": "461:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1407,
                  "src": "453:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1359,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "453:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1363,
                  "mutability": "mutable",
                  "name": "option_",
                  "nameLocation": "502:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1407,
                  "src": "481:28:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FromAppOption_$1427_memory_ptr",
                    "typeString": "struct FromAppOption"
                  },
                  "typeName": {
                    "id": 1362,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1361,
                      "name": "FromAppOption",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1427,
                      "src": "481:13:10"
                    },
                    "referencedDeclaration": 1427,
                    "src": "481:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FromAppOption_$1427_storage_ptr",
                      "typeString": "struct FromAppOption"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "395:120:10"
            },
            "returnParameters": {
              "id": 1369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1368,
                  "mutability": "mutable",
                  "name": "clone",
                  "nameLocation": "552:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1407,
                  "src": "544:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "543:15:10"
            },
            "scope": 1408,
            "src": "374:573:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1409,
        "src": "208:741:10",
        "usedErrors": []
      }
    ],
    "src": "32:918:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.9",
  "updatedAt": "2023-01-14T07:32:26.318Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}