{
  "contractName": "DoctorFactory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "doctor_",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "name_",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "affiliate_",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "fromApp",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "internalType": "struct FromAppOption",
          "name": "option_",
          "type": "tuple"
        }
      ],
      "name": "createDoctor",
      "outputs": [
        {
          "internalType": "address",
          "name": "clone",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctor_\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"name_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"affiliate_\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"fromApp\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"internalType\":\"struct FromAppOption\",\"name\":\"option_\",\"type\":\"tuple\"}],\"name\":\"createDoctor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"clone\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DoctorFactory.sol\":\"DoctorFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xae614c6b103b743c62e9544632f7ef4fc8950de4e9c783d2e765a3b86701dda3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1840012075b9b05caa02da1b16d2d2662b2c383feb3169c8159fd8deb4840f5c\",\"dweb:/ipfs/QmPj63a7JH3aAqVj1wvkuGEdth7s9f33vK26A5aE9k23S4\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/Doctor.sol\":{\"keccak256\":\"0xb1cdfbfa349b9f4ace4790ea9f178c1d9439a472a2e06acead03ec670fdb1f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59b3d941f3ca13e923f48c6cb8625dd05e8b69650544d685772fba66a941b7cd\",\"dweb:/ipfs/QmWzq1qbJ1sCPDTUu7beHgmZNLKpyksiorui5kYwdW9oBs\"]},\"project:/contracts/DoctorFactory.sol\":{\"keccak256\":\"0xd72b17137bf3518f793626cf75c7b36717e234902e8b8532aa5e28e15e776c8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15802176e887309106b348373fcc1aa241079951979846882fdd9bf3ba75fd5a\",\"dweb:/ipfs/QmPupCYx43TguXbjan2DpGyJyotVQ5rdjPeexYXKWTwHX2\"]},\"project:/contracts/Helper.sol\":{\"keccak256\":\"0x6479a2d2ae286386b88602e570bef7e4fdd137e2af83721795d7db7a8b01a6f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d2d32e638a4f24b7eab31ec24a4923f54e89785678b75b05cd9d27d501c82ca\",\"dweb:/ipfs/QmbV4qANJ21Rw5J2iW3L7bmAKuFLNDzmvLFz7UN57UqDxg\"]},\"project:/contracts/Treatment.sol\":{\"keccak256\":\"0x141886ce035365583c2f98db2581573f516974c9b0d794c0c2a4630e15b6a125\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b66acb14c9b283a2fe9d5cb077ded8d3fab66f119e23f20c2d045a9fa9469b2\",\"dweb:/ipfs/QmZER6WugK5BsenwnPAvBua2dbDuZnzw5MjVdEGzXxbmSp\"]},\"project:/contracts/TreatmentFactory.sol\":{\"keccak256\":\"0x6c03e82845e8c74b4aa8e308cb0a76a0e4cd54407eae9e0366f46bc74ece66aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef3ebcdc49176ba7f7303b1da93b010adc68b762622c65ad2df55adc5849a854\",\"dweb:/ipfs/QmRbZ38Ax4oZCXtydLrAuGSfo84ETbYUf3ba5ZGCNYGp9u\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5061001a33610058565b604051610026906100a8565b604051809103906000f080158015610042573d6000803e3d6000fd5b5060601b6001600160601b0319166080526100b5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6110b38061071d83390190565b60805160601c61064b6100d2600039600060e7015261064b6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063f13e48691461009e578063f2fde38b146100b1575b600080fd5b6100596100c4565b005b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100756100ac36600461053b565b6100d8565b6100596100bf36600461051a565b610262565b6100cc61031e565b6100d6600061039f565b565b60006100e261031e565b61010b7f0000000000000000000000000000000000000000000000000000000000000000610414565b8251909150156101bd5760208201516040517f0716c97000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301529182166024820152336044820152606481018690526084810185905290821690630716c9709060a401600060405180830381600087803b1580156101a057600080fd5b505af11580156101b4573d6000803e3d6000fd5b5050505061025a565b6040517f0716c97000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152600060248301523360448301526064820186905260848201859052821690630716c9709060a401600060405180830381600087803b15801561024157600080fd5b505af1158015610255573d6000803e3d6000fd5b505050505b949350505050565b61026a61031e565b73ffffffffffffffffffffffffffffffffffffffff8116610312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61031b8161039f565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146100d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610309565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f091505073ffffffffffffffffffffffffffffffffffffffff81166104f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f455243313136373a20637265617465206661696c6564000000000000000000006044820152606401610309565b919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146104f157600080fd5b60006020828403121561052b578081fd5b610534826104f6565b9392505050565b60008060008084860360a0811215610551578384fd5b61055a866104f6565b9450602086013593506040860135925060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa082011215610599578182fd5b506040516040810181811067ffffffffffffffff821117156105e2577f4e487b710000000000000000000000000000000000000000000000000000000083526041600452602483fd5b604052606086013580151581146105f7578283fd5b8152610605608087016104f6565b602082015293969295509093505056fea26469706673582212209cae713e6e71d5146b1d79db56af9ef9c14d35d825af049556910139223e676d64736f6c63430008040033608060405234801561001057600080fd5b5061003c7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b086000610041565b61008c565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6110188061009b6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80638bb254191161008c578063d294ffe011610066578063d294ffe0146101f4578063d547741f14610207578063ec87621c1461021a578063fec331f21461024157600080fd5b80638bb254191461019357806391d14854146101a8578063a217fddf146101ec57600080fd5b80632f2ff15d116100bd5780632f2ff15d1461015257806336568abe146101655780635a9b0b891461017857600080fd5b806301ffc9a7146100e45780630716c9701461010c578063248a9ca314610121575b600080fd5b6100f76100f2366004610d8d565b610268565b60405190151581526020015b60405180910390f35b61011f61011a366004610cf6565b610301565b005b61014461012f366004610d4a565b60009081526020819052604090206001015490565b604051908152602001610103565b61011f610160366004610d62565b61048f565b61011f610173366004610d62565b6104b9565b60015460025460408051928352602083019190915201610103565b61019b61056c565b6040516101039190610e4e565b6100f76101b6366004610d62565b60009182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b610144600081565b61011f610202366004610cdc565b610606565b61011f610215366004610d62565b6106a8565b6101447f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0881565b6101447f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f81565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806102fb57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60045460ff1615610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f416c726561647920696e697469616c697a65640000000000000000000000000060448201526064015b60405180910390fd5b61039d7f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f866106cd565b6103c77f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08846106cd565b6104117f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b087f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f6106d7565b73ffffffffffffffffffffffffffffffffffffffff841615610457576104577f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08856106cd565b6001918255600255600480547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055505050565b6000828152602081905260409020600101546104aa81610722565b6104b4838361072f565b505050565b73ffffffffffffffffffffffffffffffffffffffff8116331461055e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c660000000000000000000000000000000000606482015260840161036a565b610568828261081f565b5050565b60607f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f61059881610722565b60038054806020026020016040519081016040528092919081815260200182805480156105fb57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116105d0575b505050505091505090565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0861063081610722565b50600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000828152602081905260409020600101546106c381610722565b6104b4838361081f565b610568828261072f565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b61072c81336108d6565b50565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166105685760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556107c13390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16156105685760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166105685761092c8173ffffffffffffffffffffffffffffffffffffffff1660146109a6565b6109378360206109a6565b604051602001610948929190610dcd565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261036a91600401610ea8565b606060006109b5836002610f11565b6109c0906002610ef9565b67ffffffffffffffff8111156109ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610a29576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610a87577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610b11577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000610b4d846002610f11565b610b58906001610ef9565b90505b6001811115610c43577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110610bc0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b828281518110610bfd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93610c3c81610f7e565b9050610b5b565b508315610cac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161036a565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610cd757600080fd5b919050565b600060208284031215610ced578081fd5b610cac82610cb3565b600080600080600060a08688031215610d0d578081fd5b610d1686610cb3565b9450610d2460208701610cb3565b9350610d3260408701610cb3565b94979396509394606081013594506080013592915050565b600060208284031215610d5b578081fd5b5035919050565b60008060408385031215610d74578182fd5b82359150610d8460208401610cb3565b90509250929050565b600060208284031215610d9e578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610cac578182fd5b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610e05816017850160208801610f4e565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351610e42816028840160208801610f4e565b01602801949350505050565b6020808252825182820181905260009190848201906040850190845b81811015610e9c57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610e6a565b50909695505050505050565b6020815260008251806020840152610ec7816040850160208701610f4e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008219821115610f0c57610f0c610fb3565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f4957610f49610fb3565b500290565b60005b83811015610f69578181015183820152602001610f51565b83811115610f78576000848401525b50505050565b600081610f8d57610f8d610fb3565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122009ec8b15e3f884316906bc7d3d7e46d4229af2b88626a3110d39246eae2a670764736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063f13e48691461009e578063f2fde38b146100b1575b600080fd5b6100596100c4565b005b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100756100ac36600461053b565b6100d8565b6100596100bf36600461051a565b610262565b6100cc61031e565b6100d6600061039f565b565b60006100e261031e565b61010b7f0000000000000000000000000000000000000000000000000000000000000000610414565b8251909150156101bd5760208201516040517f0716c97000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301529182166024820152336044820152606481018690526084810185905290821690630716c9709060a401600060405180830381600087803b1580156101a057600080fd5b505af11580156101b4573d6000803e3d6000fd5b5050505061025a565b6040517f0716c97000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152600060248301523360448301526064820186905260848201859052821690630716c9709060a401600060405180830381600087803b15801561024157600080fd5b505af1158015610255573d6000803e3d6000fd5b505050505b949350505050565b61026a61031e565b73ffffffffffffffffffffffffffffffffffffffff8116610312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61031b8161039f565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146100d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610309565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f091505073ffffffffffffffffffffffffffffffffffffffff81166104f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f455243313136373a20637265617465206661696c6564000000000000000000006044820152606401610309565b919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146104f157600080fd5b60006020828403121561052b578081fd5b610534826104f6565b9392505050565b60008060008084860360a0811215610551578384fd5b61055a866104f6565b9450602086013593506040860135925060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa082011215610599578182fd5b506040516040810181811067ffffffffffffffff821117156105e2577f4e487b710000000000000000000000000000000000000000000000000000000083526041600452602483fd5b604052606086013580151581146105f7578283fd5b8152610605608087016104f6565b602082015293969295509093505056fea26469706673582212209cae713e6e71d5146b1d79db56af9ef9c14d35d825af049556910139223e676d64736f6c63430008040033",
  "immutableReferences": {
    "2051": [
      {
        "length": 32,
        "start": 231
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3476:29",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:29",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:29"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:29"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:29",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:29"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:29"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:29",
                "type": ""
              }
            ],
            "src": "14:196:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "285:126:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "331:26:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "340:6:29"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "348:6:29"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "333:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "333:22:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "333:22:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "306:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "315:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "302:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "302:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "327:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "298:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "298:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "295:2:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "366:39:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "395:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "376:18:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:29:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "366:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "251:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "262:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "274:6:29",
                "type": ""
              }
            ],
            "src": "215:196:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "568:1000:29",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "578:33:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "592:7:29"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "601:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "588:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "588:23:29"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "582:2:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "636:26:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "645:6:29"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "653:6:29"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "638:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "638:22:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "638:22:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "627:2:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "631:3:29",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "623:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "623:12:29"
                  },
                  "nodeType": "YulIf",
                  "src": "620:2:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "671:39:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "700:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "681:18:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "681:29:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "671:6:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "719:42:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "746:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "757:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "742:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "742:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "729:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "729:32:29"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "719:6:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "770:42:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "797:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "808:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "793:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "793:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "780:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "780:32:29"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "770:6:29"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "909:26:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "918:6:29"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "926:6:29"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "911:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "911:22:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "911:22:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "832:2:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "836:66:29",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "828:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "828:75:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "905:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "824:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "824:84:29"
                  },
                  "nodeType": "YulIf",
                  "src": "821:2:29"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "944:23:29",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "958:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "958:9:29"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "948:6:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "976:33:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "998:6:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1006:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "994:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "994:15:29"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "980:10:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1092:178:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1113:6:29"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1121:77:29",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1106:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1106:93:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1106:93:29"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1219:1:29",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1222:4:29",
                              "type": "",
                              "value": "0x41"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1212:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1212:15:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1212:15:29"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1247:6:29"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1255:4:29",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1240:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1240:20:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1240:20:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1027:10:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1039:18:29",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1024:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1024:34:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1063:10:29"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1075:6:29"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1060:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1060:22:29"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1021:2:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:62:29"
                  },
                  "nodeType": "YulIf",
                  "src": "1018:2:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1286:2:29",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1290:10:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1279:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1279:22:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1279:22:29"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1310:45:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1340:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1351:2:29",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1336:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1336:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1323:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1323:32:29"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1314:5:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1408:26:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1417:6:29"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1425:6:29"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1410:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1410:22:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1410:22:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1377:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1398:5:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1391:6:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1391:13:29"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1384:6:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1384:21:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1374:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1374:32:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1367:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1367:40:29"
                  },
                  "nodeType": "YulIf",
                  "src": "1364:2:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1450:6:29"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1458:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1443:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1443:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1443:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1484:6:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1492:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1480:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1480:15:29"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1520:9:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1531:3:29",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1516:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1516:19:29"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "1497:18:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1497:39:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1473:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1473:64:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1473:64:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1546:16:29",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1556:6:29"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1546:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes32t_bytes32t_struct$_FromAppOption_$2147_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "510:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "521:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "533:6:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "541:6:29",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "549:6:29",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "557:6:29",
                "type": ""
              }
            ],
            "src": "416:1152:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1674:125:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1684:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1696:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1707:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1692:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1692:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1684:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1726:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1741:6:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1749:42:29",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1737:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1737:55:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1719:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1719:74:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1719:74:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1643:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1654:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1665:4:29",
                "type": ""
              }
            ],
            "src": "1573:226:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2017:338:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2027:27:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2039:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2050:3:29",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2035:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2035:19:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2027:4:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2063:52:29",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2073:42:29",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2067:2:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2131:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2146:6:29"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2154:2:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2142:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2142:15:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2124:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2124:34:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2124:34:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2178:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2189:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2174:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2174:18:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2198:6:29"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2206:2:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2194:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2194:15:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2167:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2167:43:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2167:43:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2230:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2241:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2226:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2226:18:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "2250:6:29"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2258:2:29"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2246:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2246:15:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2219:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2219:43:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2219:43:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2282:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2293:2:29",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2278:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2278:18:29"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2298:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2271:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2271:34:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2271:34:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2325:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2336:3:29",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2321:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2321:19:29"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "2342:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2314:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2314:35:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2314:35:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_bytes32_t_bytes32__to_t_address_t_address_t_address_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1954:9:29",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1965:6:29",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1973:6:29",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1981:6:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1989:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1997:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2008:4:29",
                "type": ""
              }
            ],
            "src": "1804:551:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2534:228:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2551:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2562:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2544:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2544:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2544:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2585:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2596:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2581:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2581:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2601:2:29",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2574:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2574:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2574:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2624:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2635:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2620:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2620:18:29"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2640:34:29",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2613:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2613:62:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2613:62:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2695:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2706:2:29",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2691:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2691:18:29"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2711:8:29",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2684:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2684:36:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2684:36:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2729:27:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2741:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2752:3:29",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2737:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2737:19:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2729:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2511:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2525:4:29",
                "type": ""
              }
            ],
            "src": "2360:402:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2941:172:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2958:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2969:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2951:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2951:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2951:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2992:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3003:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2988:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2988:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3008:2:29",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2981:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2981:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2981:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3031:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3042:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3027:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3027:18:29"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3047:24:29",
                        "type": "",
                        "value": "ERC1167: create failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3020:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3020:52:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3020:52:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3081:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3093:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3104:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3089:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3089:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3081:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2918:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2932:4:29",
                "type": ""
              }
            ],
            "src": "2767:346:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3292:182:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3309:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3320:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3302:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3302:21:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3302:21:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3343:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3354:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3339:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3339:18:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3359:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3332:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3332:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3332:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3382:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3393:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3378:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3378:18:29"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3398:34:29",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3371:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3371:62:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3371:62:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3442:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3454:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3465:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3450:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3450:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3442:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3269:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3283:4:29",
                "type": ""
              }
            ],
            "src": "3118:356:29"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bytes32t_bytes32t_struct$_FromAppOption_$2147_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        let _1 := sub(dataEnd, headStart)\n        if slt(_1, 160) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        if slt(add(_1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0), 64) { revert(value3, value3) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 64)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(value3, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x41)\n            revert(value3, 0x24)\n        }\n        mstore(64, newFreePtr)\n        let value := calldataload(add(headStart, 96))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value3, value3) }\n        mstore(memPtr, value)\n        mstore(add(memPtr, 32), abi_decode_address(add(headStart, 128)))\n        value3 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_bytes32_t_bytes32__to_t_address_t_address_t_address_t_bytes32_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"ERC1167: create failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 29,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "208:840:14:-:0;;;293:75;;;;;;;;;-1:-1:-1;936:32:4;719:10:6;936:18:4;:32::i;:::-;348:12:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;317:44:14;;-1:-1:-1;317:44:14;;;208:840;;2433:187:4;2506:16;2525:6;;-1:-1:-1;2541:17:4;;-1:-1:-1;2541:17:4;;;;;;;;2573:40;;2525:6;;;2541:17;;2525:6;;2573:40;;;2433:187;;:::o;208:840:14:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;",
  "deployedSourceMap": "208:840:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:4;;;:::i;:::-;;1201:85;1247:7;1273:6;;;1201:85;;;1749:42:29;1737:55;;;1719:74;;1707:2;1692:18;1201:85:4;;;;;;;374:672:14;;;;;;:::i;:::-;;:::i;2081:198:4:-;;;;;;:::i;:::-;;:::i;1831:101::-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;374:672:14:-;544:13;1094::4;:11;:13::i;:::-;577:34:14::1;590:20;577:12;:34::i;:::-;625:15:::0;;569:42;;-1:-1:-1;621:419:14::1;;;723:12;::::0;::::1;::::0;656:172:::1;::::0;;;;:24:::1;2142:15:29::0;;;656:172:14::1;::::0;::::1;2124:34:29::0;2194:15;;;2174:18;;;2167:43;753:10:14::1;2226:18:29::0;;;2219:43;2278:18;;;2271:34;;;2321:19;;;2314:35;;;656:24:14;;::::1;::::0;::::1;::::0;2035:19:29;;656:172:14::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;621:419;;;859:170;::::0;;;;:24:::1;2142:15:29::0;;;859:170:14::1;::::0;::::1;2124:34:29::0;934:1:14::1;2174:18:29::0;;;2167:43;954:10:14::1;2226:18:29::0;;;2219:43;2278:18;;;2271:34;;;2321:19;;;2314:35;;;859:24:14;::::1;::::0;::::1;::::0;2035:19:29;;859:170:14::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;621:419;374:672:::0;;;;;;:::o;2081:198:4:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;2562:2:29;2161:73:4::1;::::0;::::1;2544:21:29::0;2601:2;2581:18;;;2574:30;2640:34;2620:18;;;2613:62;2711:8;2691:18;;;2684:36;2737:19;;2161:73:4::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;1422:23;1273:6;719:10:6;1422:23:4;1414:68;;;;;;;3320:2:29;1414:68:4;;;3302:21:29;;;3339:18;;;3332:30;3398:34;3378:18;;;3371:62;3450:18;;1414:68:4;3292:182:29;2433:187:4;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2433:187;;:::o;973:558:5:-;1030:16;1141:4;1135:11;1171:66;1166:3;1159:79;1284:14;1278:4;1274:25;1267:4;1262:3;1258:14;1251:49;1336:66;1329:4;1324:3;1320:14;1313:90;1443:4;1438:3;1435:1;1428:20;1416:32;-1:-1:-1;;1475:22:5;;;1467:57;;;;;;;2969:2:29;1467:57:5;;;2951:21:29;3008:2;2988:18;;;2981:30;3047:24;3027:18;;;3020:52;3089:18;;1467:57:5;2941:172:29;1467:57:5;973:558;;;:::o;14:196:29:-;82:20;;142:42;131:54;;121:65;;111:2;;200:1;197;190:12;215:196;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;348:6;340;333:22;295:2;376:29;395:9;376:29;:::i;:::-;366:39;285:126;-1:-1:-1;;;285:126:29:o;416:1152::-;533:6;541;549;557;601:9;592:7;588:23;631:3;627:2;623:12;620:2;;;653:6;645;638:22;620:2;681:29;700:9;681:29;:::i;:::-;671:39;;757:2;746:9;742:18;729:32;719:42;;808:2;797:9;793:18;780:32;770:42;;905:2;836:66;832:2;828:75;824:84;821:2;;;926:6;918;911:22;821:2;;964;958:9;1006:2;998:6;994:15;1075:6;1063:10;1060:22;1039:18;1027:10;1024:34;1021:62;1018:2;;;1121:77;1113:6;1106:93;1222:4;1219:1;1212:15;1255:4;1247:6;1240:20;1018:2;1286;1279:22;1351:2;1336:18;;1323:32;1391:13;;1384:21;1374:32;;1364:2;;1425:6;1417;1410:22;1364:2;1443:21;;1497:39;1531:3;1516:19;;1497:39;:::i;:::-;1492:2;1480:15;;1473:64;568:1000;;;;-1:-1:-1;568:1000:29;;-1:-1:-1;;568:1000:29:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./Doctor.sol\";\nimport \"./Helper.sol\";\n\ncontract DoctorFactory is Ownable {\n    address immutable doctorImplementation;\n\n    constructor() {\n        doctorImplementation = address(new Doctor());\n    }\n\n    function createDoctor(\n        address doctor_,\n        bytes32 name_,\n        bytes32 affiliate_,\n        FromAppOption memory option_\n    ) external onlyOwner returns (address clone) {\n        clone = Clones.clone(doctorImplementation);\n        if (option_.fromApp) {\n            Doctor(clone).initialize(\n                doctor_,\n                option_.addr,\n                msg.sender,\n                name_,\n                affiliate_\n            );\n        } else {\n            Doctor(clone).initialize(\n                doctor_,\n                address(0),\n                msg.sender,\n                name_,\n                affiliate_\n            );\n        }\n    }\n}\n",
  "sourcePath": "/home/leslie/Documents/GitHub/svelte-blockchain-template-sveltekit/contracts/DoctorFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/DoctorFactory.sol",
    "exportedSymbols": {
      "AccessControl": [
        319
      ],
      "BoolTriple": [
        2137
      ],
      "Bytes32Pair": [
        2130
      ],
      "Clones": [
        735
      ],
      "Context": [
        757
      ],
      "Doctor": [
        2041
      ],
      "DoctorFactory": [
        2123
      ],
      "DoctorStruct": [
        1881
      ],
      "Dosage": [
        3354
      ],
      "ERC165": [
        1007
      ],
      "Frequency": [
        3358
      ],
      "FromAppOption": [
        2147
      ],
      "IAccessControl": [
        517
      ],
      "IERC165": [
        1019
      ],
      "Ownable": [
        655
      ],
      "Schedule": [
        3374
      ],
      "SmallUintPair": [
        2142
      ],
      "Strings": [
        983
      ],
      "Treatment": [
        3630
      ],
      "TreatmentFactory": [
        3695
      ]
    },
    "id": 2124,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2043,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:14"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "id": 2044,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2124,
        "sourceUnit": 736,
        "src": "57:50:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2045,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2124,
        "sourceUnit": 656,
        "src": "108:52:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Doctor.sol",
        "file": "./Doctor.sol",
        "id": 2046,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2124,
        "sourceUnit": 2042,
        "src": "161:22:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Helper.sol",
        "file": "./Helper.sol",
        "id": 2047,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2124,
        "sourceUnit": 2148,
        "src": "184:22:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2048,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 655,
              "src": "234:7:14"
            },
            "id": 2049,
            "nodeType": "InheritanceSpecifier",
            "src": "234:7:14"
          }
        ],
        "contractDependencies": [
          2041
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2123,
        "linearizedBaseContracts": [
          2123,
          655,
          757
        ],
        "name": "DoctorFactory",
        "nameLocation": "217:13:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2051,
            "mutability": "immutable",
            "name": "doctorImplementation",
            "nameLocation": "266:20:14",
            "nodeType": "VariableDeclaration",
            "scope": 2123,
            "src": "248:38:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2050,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "248:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2064,
              "nodeType": "Block",
              "src": "307:61:14",
              "statements": [
                {
                  "expression": {
                    "id": 2062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2054,
                      "name": "doctorImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2051,
                      "src": "317:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "348:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Doctor_$2041_$",
                              "typeString": "function () returns (contract Doctor)"
                            },
                            "typeName": {
                              "id": 2058,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2057,
                                "name": "Doctor",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2041,
                                "src": "352:6:14"
                              },
                              "referencedDeclaration": 2041,
                              "src": "352:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Doctor_$2041",
                                "typeString": "contract Doctor"
                              }
                            }
                          },
                          "id": 2060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "348:12:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Doctor_$2041",
                            "typeString": "contract Doctor"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Doctor_$2041",
                            "typeString": "contract Doctor"
                          }
                        ],
                        "id": 2056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "340:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2055,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "340:7:14",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "340:21:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "317:44:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2063,
                  "nodeType": "ExpressionStatement",
                  "src": "317:44:14"
                }
              ]
            },
            "id": 2065,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "304:2:14"
            },
            "returnParameters": {
              "id": 2053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:0:14"
            },
            "scope": 2123,
            "src": "293:75:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2121,
              "nodeType": "Block",
              "src": "559:487:14",
              "statements": [
                {
                  "expression": {
                    "id": 2086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2081,
                      "name": "clone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2079,
                      "src": "569:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2084,
                          "name": "doctorImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2051,
                          "src": "590:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 2082,
                          "name": "Clones",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 735,
                          "src": "577:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Clones_$735_$",
                            "typeString": "type(library Clones)"
                          }
                        },
                        "id": 2083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "clone",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 678,
                        "src": "577:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                          "typeString": "function (address) returns (address)"
                        }
                      },
                      "id": 2085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "577:34:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "569:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2087,
                  "nodeType": "ExpressionStatement",
                  "src": "569:42:14"
                },
                {
                  "condition": {
                    "expression": {
                      "id": 2088,
                      "name": "option_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2074,
                      "src": "625:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FromAppOption_$2147_memory_ptr",
                        "typeString": "struct FromAppOption memory"
                      }
                    },
                    "id": 2089,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "fromApp",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2144,
                    "src": "625:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2119,
                    "nodeType": "Block",
                    "src": "845:195:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2108,
                              "name": "doctor_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2067,
                              "src": "901:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2111,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "934:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "926:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2109,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "926:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "926:10:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2113,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "954:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "954:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2115,
                              "name": "name_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2069,
                              "src": "982:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2116,
                              "name": "affiliate_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2071,
                              "src": "1005:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2105,
                                  "name": "clone",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2079,
                                  "src": "866:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2104,
                                "name": "Doctor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2041,
                                "src": "859:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Doctor_$2041_$",
                                  "typeString": "type(contract Doctor)"
                                }
                              },
                              "id": 2106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "859:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Doctor_$2041",
                                "typeString": "contract Doctor"
                              }
                            },
                            "id": 2107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1997,
                            "src": "859:24:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,address,address,bytes32,bytes32) external"
                            }
                          },
                          "id": 2117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "859:170:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2118,
                        "nodeType": "ExpressionStatement",
                        "src": "859:170:14"
                      }
                    ]
                  },
                  "id": 2120,
                  "nodeType": "IfStatement",
                  "src": "621:419:14",
                  "trueBody": {
                    "id": 2103,
                    "nodeType": "Block",
                    "src": "642:197:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2094,
                              "name": "doctor_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2067,
                              "src": "698:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2095,
                                "name": "option_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2074,
                                "src": "723:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FromAppOption_$2147_memory_ptr",
                                  "typeString": "struct FromAppOption memory"
                                }
                              },
                              "id": 2096,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2146,
                              "src": "723:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2097,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "753:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "753:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2099,
                              "name": "name_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2069,
                              "src": "781:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2100,
                              "name": "affiliate_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2071,
                              "src": "804:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2091,
                                  "name": "clone",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2079,
                                  "src": "663:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2090,
                                "name": "Doctor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2041,
                                "src": "656:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Doctor_$2041_$",
                                  "typeString": "type(contract Doctor)"
                                }
                              },
                              "id": 2092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "656:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Doctor_$2041",
                                "typeString": "contract Doctor"
                              }
                            },
                            "id": 2093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1997,
                            "src": "656:24:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,address,address,bytes32,bytes32) external"
                            }
                          },
                          "id": 2101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "656:172:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2102,
                        "nodeType": "ExpressionStatement",
                        "src": "656:172:14"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f13e4869",
            "id": 2122,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2077,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2076,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 574,
                  "src": "525:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "525:9:14"
              }
            ],
            "name": "createDoctor",
            "nameLocation": "383:12:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2067,
                  "mutability": "mutable",
                  "name": "doctor_",
                  "nameLocation": "413:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2122,
                  "src": "405:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2069,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "438:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2122,
                  "src": "430:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2068,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2071,
                  "mutability": "mutable",
                  "name": "affiliate_",
                  "nameLocation": "461:10:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2122,
                  "src": "453:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2070,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "453:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2074,
                  "mutability": "mutable",
                  "name": "option_",
                  "nameLocation": "502:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2122,
                  "src": "481:28:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FromAppOption_$2147_memory_ptr",
                    "typeString": "struct FromAppOption"
                  },
                  "typeName": {
                    "id": 2073,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2072,
                      "name": "FromAppOption",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2147,
                      "src": "481:13:14"
                    },
                    "referencedDeclaration": 2147,
                    "src": "481:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FromAppOption_$2147_storage_ptr",
                      "typeString": "struct FromAppOption"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "395:120:14"
            },
            "returnParameters": {
              "id": 2080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2079,
                  "mutability": "mutable",
                  "name": "clone",
                  "nameLocation": "552:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2122,
                  "src": "544:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "543:15:14"
            },
            "scope": 2123,
            "src": "374:672:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2124,
        "src": "208:840:14",
        "usedErrors": []
      }
    ],
    "src": "32:1017:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.9",
  "updatedAt": "2023-06-23T09:26:13.540Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}